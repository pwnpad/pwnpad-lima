---
- name: Setup base pacman respositories
  hosts: lima-pwnpad
  gather_facts: true
  become: true
  tasks:
    - name: Setup repositories for aarch64 architecture
      when: ansible_architecture == 'aarch64'
      ansible.builtin.copy:
        dest: /etc/pacman.d/mirrorlist
        content: |
          Server = http://tw2.mirror.archlinuxarm.org/$arch/$repo
          Server = https://ca.us.mirror.archlinuxarm.org/$arch/$repo
        mode: "0644"

    - name: Setup repositories for x86_64 architecture
      when: ansible_architecture == 'x86_64'
      block:
        - name: Uncomment multilib in pacman.conf
          ansible.builtin.replace:
            path: /etc/pacman.conf
            regexp: '(?m)^#\[multilib\]\n#Include = (.+)$'
            replace: '[multilib]\nInclude = \1'

        - name: Set mirrorlist for x86_64
          ansible.builtin.copy:
            dest: /etc/pacman.d/mirrorlist
            content: |
              Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch
              Server = https://download.nus.edu.sg/mirror/archlinux/$repo/os/$arch
              Server = https://mirror.0x.sg/archlinux/$repo/os/$arch
            mode: "0644"

    - name: Print unknown architecture message
      when: ansible_architecture != 'aarch64' and ansible_architecture != 'x86_64'
      ansible.builtin.debug:
        msg: "Unsupported architecture {{ ansible_architecture }} detected"

- name: Setup extra repositories
  hosts: lima-pwnpad
  gather_facts: false
  become: true
  tasks:
    - name: Setup pwnpad repositories
      ansible.builtin.blockinfile:
        path: /etc/pacman.conf
        block: |
          [pwnpad]
          SigLevel = Optional TrustedOnly
          Server = https://raw.githubusercontent.com/pwnpad/pwnpad-repo/master/$arch

          [pwnpad-large]
          SigLevel = Optional TrustedOnly
          Server = https://github.com/pwnpad/pwnpad-large-repo/releases/download/$arch
        insertafter: EOF
        marker: ""

    - name: Setup blackarch repository
      ansible.builtin.shell: curl -fsSL https://raw.githubusercontent.com/pwnpad/blackarch-mirror/master/strap.sh | sh
      changed_when: true

- name: Setup base packages
  hosts: lima-pwnpad
  gather_facts: false
  become: true
  tasks:
    - name: Upgrade all packages
      ansible.builtin.pacman:
        update_cache: yes
        upgrade: yes

    - name: Install base packages
      ansible.builtin.pacman:
        name:
          - base-devel
          - zsh

- name: Setup users
  hosts: lima-pwnpad
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Allow wheel group to have passwordless sudo
      ansible.builtin.replace:
        path: /etc/sudoers
        regexp: '^# %wheel\s+ALL=\(ALL:ALL\)\s+NOPASSWD:\s+ALL'
        replace: "%wheel ALL=(ALL:ALL) NOPASSWD: ALL"

    - name: Modify {{ pwnpad_vm_user }} user
      ansible.builtin.user:
        name: "{{ pwnpad_vm_user }}"
        state: present
        create_home: true
        group: users
        groups: wheel
        shell: /usr/bin/zsh

- name: Copy configuration files
  hosts: lima-pwnpad
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Copy zsh configuration
      ansible.builtin.copy:
        src: ./config/zsh/
        dest: /home/{{ pwnpad_vm_user }}
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

    - name: Copy tmux configuration
      ansible.builtin.copy:
        src: ./config/tmux/
        dest: /home/{{ pwnpad_vm_user }}
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

- name: Installing tools
  hosts: lima-pwnpad
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Installing core tools
      block:
        - name: Install from pacman
          ansible.builtin.pacman:
            name:
              - 7zip
              - bat
              - gcc
              - exa
              - fzf
              - iproute2
              - iputils
              - less
              - mlocate
              - neovim
              - net-tools
              - nodejs
              - npm
              - openssh
              - openvpn
              - pigz
              - procps-ng
              - python-pip
              - python-pipx
              - python-virtualenv
              - ripgrep
              - rlwrap
              - tmux
              - unrar
              - unzip
              - wget
              - yay
        - name: Install from yay
          community.general.pacman:
            executable: yay
            name:
              - autojump

    - name: Install infosec tools
      block:
        - name: Install from pacman
          ansible.builtin.pacman:
            name:
              - binwalk
              - dalfox
              - exploitdb
              - extra/sqlmap
              - foremost
              - gnu-netcat
              - gobuster
              - hexedit
              - jadx
              - ltrace
              - metasploit
              - nmap
              - one_gadget
              - perl-image-exiftool
              - pwnpad/aflplusplus
              - pwnpad/ngrok
              - pwnpad/yafu
              - python-gmpy2
              - python-pwntools
              - ropper
              - strace
              - xortool
              - z3

        - name: Install from pipx
          community.general.pipx:
            name: git+https://github.com/RsaCtfTool/RsaCtfTool

        - name: Install from yay
          community.general.pacman:
            executable: yay
            name: sliver

    - name: Install gdb and its plugins
      block:
        - name: Install gdb multiarch pwndbg and rz-ghidra
          ansible.builtin.pacman:
            name:
              - gdb
              - pwndbg
              - pwnpad/rz-ghidra
              - python-rzpipe

        - name: Install decomp2dbg
          ansible.builtin.pip:
            name: decomp2dbg
            executable: pip3
            extra_args: --break-system-packages

        - name: Create /usr/share/decomp2dbg directory
          ansible.builtin.file:
            path: /usr/share/decomp2dbg
            state: directory
            mode: "0755"

        - name: Download d2d.py
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/mahaloz/decomp2dbg/main/d2d.py
            dest: /usr/share/decomp2dbg/d2d.py
            mode: "0644"

        - name: Install pwn_gadget
          ansible.builtin.pip:
            name: https://github.com/zolutal/pwn_gadget/archive/refs/heads/main.zip
            executable: pip3
            extra_args: --break-system-packages

        - name: Create /usr/share/pwn_gadget directory
          ansible.builtin.file:
            path: /usr/share/pwn_gadget
            state: directory
            mode: "0755"

        - name: Download pwn_gadget.py
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/zolutal/pwn_gadget/main/pwn_gadget.py
            dest: /usr/share/pwn_gadget/pwn_gadget.py
            mode: "0644"

        - name: Setup gdbinit
          become: false
          ansible.builtin.copy:
            dest: /home/{{ pwnpad_vm_user }}/.gdbinit
            content: |
              set debuginfod enabled on
              source /usr/share/pwndbg/gdbinit.py
              set r2decompiler rizin
              # set context-ghidra if-no-source
              source /usr/share/decomp2dbg/d2d.py
              source /usr/share/pwn_gadget/pwn_gadget.py
            mode: "0644"

        - name: Setup rizin
          become: false
          ansible.builtin.copy:
            dest: /home/{{ pwnpad_vm_user }}/.rizinrc
            content: |
              e ghidra.verbose=false
            mode: "0644"

    - name: Link exiftool
      tags: test
      ansible.builtin.file:
        src: /usr/bin/vendor_perl/exiftool
        dest: /home/{{ pwnpad_vm_user }}/.local/bin/exiftool
        owner: "{{ pwnpad_vm_user }}"
        group: users
        state: link
        force: true

    - name: Set nmap capabilities
      ansible.builtin.command: setcap cap_net_raw,cap_net_admin,cap_net_bind_service+eip /usr/sbin/nmap
      changed_when: true

    - name: Installing qemu user on arm
      when: ansible_architecture == 'aarch64'
      ansible.builtin.pacman:
        name:
          - pwnpad/qemu-user-x64

- name: Setup authorized_keys
  block:
    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/home/{{ pwnpad_vm_user }}/.ssh"
        state: directory
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0700"

    - name: Create authorized_keys file
      ansible.builtin.file:
        path: "/home/{{ pwnpad_vm_user }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0600"
