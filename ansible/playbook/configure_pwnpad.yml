---
- name: Setup base pacman respositories
  hosts: lima-pwnpad
  tags: setup_base_repos
  gather_facts: true
  become: true
  tasks:
    - name: Setup repositories for aarch64 architecture
      when: ansible_architecture == 'aarch64'
      ansible.builtin.copy:
        dest: /etc/pacman.d/mirrorlist
        content: |
          Server = http://tw2.mirror.archlinuxarm.org/$arch/$repo
          Server = https://ca.us.mirror.archlinuxarm.org/$arch/$repo
        mode: "0644"

    - name: Setup repositories for x86_64 architecture
      when: ansible_architecture == 'x86_64'
      block:
        - name: Enable multilib repository
          ansible.builtin.replace:
            path: /etc/pacman.conf
            regexp: '(?m)^#\[multilib\]\n#Include = (.+)$'
            replace: '[multilib]\nInclude = \1'

        - name: Set mirrorlist
          ansible.builtin.copy:
            dest: /etc/pacman.d/mirrorlist
            content: |
              Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch
              Server = https://download.nus.edu.sg/mirror/archlinux/$repo/os/$arch
              Server = https://mirror.0x.sg/archlinux/$repo/os/$arch
            mode: "0644"

    - name: Fail if unsupported architecture is detected
      when: ansible_architecture != 'aarch64' and ansible_architecture != 'x86_64'
      meta: end_play

- name: Disable linux kernel updates
  hosts: lima-pwnpad
  tags: ignore_kernel_updates
  gather_facts: false
  become: true
  tasks:
    - name: Ignore packages for kernel updates
      ansible.builtin.replace:
        path: /etc/pacman.conf
        regexp: '^#IgnorePkg\s*='
        replace: "IgnorePkg    = linux linux-headers"

- name: Setup additional repositories
  hosts: lima-pwnpad
  tags: setup_extra_repos
  gather_facts: false
  become: true
  tasks:
    - name: Setup pwnpad repositories
      ansible.builtin.blockinfile:
        path: /etc/pacman.conf
        block: |
          [pwnpad]
          SigLevel = Optional TrustedOnly
          Server = https://raw.githubusercontent.com/pwnpad/pwnpad-repo/master/$arch

          [pwnpad-large]
          SigLevel = Optional TrustedOnly
          Server = https://github.com/pwnpad/pwnpad-large-repo/releases/download/$arch
        insertafter: EOF
        marker: ""

    - name: Setup blackarch repository
      ansible.builtin.shell: curl -fsSL https://raw.githubusercontent.com/pwnpad/blackarch-mirror/master/strap.sh | sh
      changed_when: true

- name: Setup base packages
  hosts: lima-pwnpad
  tags: setup_base_packages
  gather_facts: false
  become: true
  tasks:
    - name: Upgrade all packages
      community.general.pacman:
        update_cache: yes
        upgrade: yes

    - name: Install base packages
      community.general.pacman:
        name:
          - base-devel
          - zsh

- name: Setup users
  hosts: lima-pwnpad
  tags: setup_users
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Allow wheel group to have passwordless sudo
      ansible.builtin.replace:
        path: /etc/sudoers
        regexp: '^# %wheel\s+ALL=\(ALL:ALL\)\s+NOPASSWD:\s+ALL'
        replace: "%wheel ALL=(ALL:ALL) NOPASSWD: ALL"

    - name: Modify {{ pwnpad_vm_user }} user
      ansible.builtin.user:
        name: "{{ pwnpad_vm_user }}"
        state: present
        create_home: true
        group: users
        groups: wheel
        shell: /usr/bin/zsh

- name: Installing tools
  hosts: lima-pwnpad
  tags: install_tools
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Installing core tools
      block:
        - name: Install core tools from pacman
          community.general.pacman:
            name:
              - 7zip
              - bat
              - exa
              - fakeroot
              - fzf
              - gcc
              - iproute2
              - iputils
              - less
              - make
              - mlocate
              - neovim
              - net-tools
              - nodejs
              - npm
              - openssh
              - openvpn
              - pigz
              - procps-ng
              - python-pip
              - python-pipx
              - python-virtualenv
              - ripgrep
              - rlwrap
              - tmux
              - unrar
              - unzip
              - wget
              - yay

        - name: Install core tools from yay
          become: false
          ansible.builtin.command: yay --noconfirm --noprogressbar --needed --sync --refresh autojump

    - name: Install infosec tools
      block:
        - name: Install infosec tools from pacman
          community.general.pacman:
            name:
              - arp-scan
              - binwalk
              - commix
              - creddump
              - crunch
              - dalfox
              - dnsenum
              - dnsrecon
              - enum4linux-ng
              - evil-winrm
              - exploitdb
              - extra/sqlmap
              - foremost
              - fping
              - gnu-netcat
              - gobuster
              - hashcat-utils
              - hexedit
              - hping
              - jadx
              - ldapenum
              - ltrace
              - metasploit
              - mimikatz
              - nbtscan
              - ncrack
              - netsed
              - netsniff-ng
              - ngrep
              - nmap
              - one_gadget
              - onesixtyone
              - perl-image-exiftool
              - pwnpad/aflplusplus
              - pwnpad/john
              - pwnpad/ligolo-ng
              - pwnpad/ngrok
              - python-gmpy2
              - python-pwntools
              - responder
              - ropper
              - rustscan
              - scalpel
              - seclists
              - sleuthkit
              - smbmap
              - socat
              - strace
              - swaks
              - tcpreplay
              - traceroute
              - wafw00f
              - whatweb
              - whois
              - windows-binaries
              - xortool
              - z3

        - name: Install rsactftool
          become: false
          community.general.pipx:
            name: git+https://github.com/RsaCtfTool/RsaCtfTool

    - name: Install netexec and impacket
      block:
        - name: Install rust to compile aardwolf for netexec
          community.general.pacman:
            name: rust

        - name: Install netexec
          become: false
          community.general.pipx:
            name: git+https://github.com/Pennyw0rth/NetExec@v1.4.0

        - name: Remove rust to compile aardwolf for netexec
          community.general.pacman:
            name: rust
            state: absent

        - name: Create impacket tool symlinks
          tags: link_impacket_tools
          ansible.builtin.file:
            src: "/usr/sbin/{{ item }}.py"
            dest: "/home/{{ pwnpad_vm_user }}/.local/bin/impacket-{{ item }}"
            state: link
            owner: "{{ pwnpad_vm_user }}"
            group: users
          loop:
            - "DumpNTLMInfo"
            - "Get-GPPPassword"
            - "GetADComputers"
            - "GetADUsers"
            - "GetLAPSPassword"
            - "GetNPUsers"
            - "GetUserSPNs"
            - "addcomputer"
            - "atexec"
            - "changepasswd"
            - "dacledit"
            - "dcomexec"
            - "describeTicket"
            - "dpapi"
            - "esentutl"
            - "exchanger"
            - "findDelegation"
            - "getArch"
            - "getPac"
            - "getST"
            - "getTGT"
            - "goldenPac"
            - "karmaSMB"
            - "keylistattack"
            - "kintercept"
            - "lookupsid"
            - "machine_role"
            - "mimikatz"
            - "mqtt_check"
            - "mssqlclient"
            - "mssqlinstance"
            - "net"
            - "netview"
            - "ntfs-read"
            - "ntlmrelayx"
            - "owneredit"
            - "ping"
            - "ping6"
            - "psexec"
            - "raiseChild"
            - "rbcd"
            - "rdp_check"
            - "reg"
            - "registry-read"
            - "rpcdump"
            - "rpcmap"
            - "sambaPipe"
            - "samrdump"
            - "secretsdump"
            - "services"
            - "smbclient"
            - "smbexec"
            - "smbserver"
            - "sniff"
            - "sniffer"
            - "split"
            - "ticketConverter"
            - "ticketer"
            - "tstool"
            - "wmiexec"
            - "wmipersist"
            - "wmiquery"

    - name: Install gdb and its plugins
      block:
        - name: Install gdb, pwndbg and rz-ghidra
          community.general.pacman:
            name:
              - gdb
              - extra/pwndbg
              - python-rzpipe
              - rz-ghidra

        - name: Install decomp2dbg
          ansible.builtin.pip:
            name: decomp2dbg
            executable: pip3
            extra_args: --break-system-packages

        - name: Create /usr/share/decomp2dbg directory
          ansible.builtin.file:
            path: /usr/share/decomp2dbg
            state: directory
            mode: "0755"

        - name: Download d2d.py
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/mahaloz/decomp2dbg/main/d2d.py
            dest: /usr/share/decomp2dbg/d2d.py
            mode: "0644"

        - name: Install pwn_gadget
          ansible.builtin.pip:
            name: https://github.com/zolutal/pwn_gadget/archive/refs/heads/main.zip
            executable: pip3
            extra_args: --break-system-packages

        - name: Create /usr/share/pwn_gadget directory
          ansible.builtin.file:
            path: /usr/share/pwn_gadget
            state: directory
            mode: "0755"

        - name: Download pwn_gadget.py
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/zolutal/pwn_gadget/main/pwn_gadget.py
            dest: /usr/share/pwn_gadget/pwn_gadget.py
            mode: "0644"

        - name: Setup gdbinit
          become: false
          ansible.builtin.copy:
            dest: /home/{{ pwnpad_vm_user }}/.gdbinit
            content: |
              set debuginfod enabled on
              source /usr/share/pwndbg/gdbinit.py
              set r2decompiler rizin
              # set context-ghidra if-no-source
              source /usr/share/decomp2dbg/d2d.py
              source /usr/share/pwn_gadget/pwn_gadget.py
            mode: "0644"

        - name: Setup rizin
          become: false
          ansible.builtin.copy:
            dest: /home/{{ pwnpad_vm_user }}/.rizinrc
            content: |
              e ghidra.verbose=false
            mode: "0644"

    - name: Set nmap capabilities
      ansible.builtin.command: setcap cap_net_raw,cap_net_admin,cap_net_bind_service+eip /usr/sbin/nmap
      changed_when: true

    - name: Installing qemu user on arm
      when: ansible_architecture == 'aarch64'
      community.general.pacman:
        name:
          - pwnpad/qemu-user-x64

    - name: Setup smbclient
      block:
        - name: Create samba directory
          ansible.builtin.file:
            path: /etc/samba
            state: directory
            mode: "0755"

        - name: Download default smb.conf
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/samba-team/samba/master/examples/smb.conf.default
            dest: /etc/samba/smb.conf
            mode: "0644"

- name: Install gcc and glibc libraries
  hosts: lima-pwnpad
  tags: install_gcc_libraries
  gather_facts: true
  become: true
  tasks:
    - name: Install libraries for x86 and x86_64
      when: ansible_architecture == 'x86_64'
      community.general.pacman:
        name:
          - lib32-glibc
          - lib32-gcc-libs
          - glibc
          - gcc-libs

    - name: Install libraries for emulation of x86 and x86_64
      when: ansible_architecture == 'aarch64'
      community.general.pacman:
        name:
          - lib32-glibc
          - lib32-gcc-libs
          - lib64-glibc
          - lib64-gcc-libs

- name: Setup authorized_keys
  hosts: lima-pwnpad
  tags: setup_ssh_authorized_keys
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/home/{{ pwnpad_vm_user }}/.ssh"
        state: directory
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0700"

    - name: Create authorized_keys file
      ansible.builtin.file:
        path: "/home/{{ pwnpad_vm_user }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0600"

- name: Setup tmux
  hosts: lima-pwnpad
  tags: setup_tmux
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Copy tmux configuration
      become: true
      ansible.builtin.copy:
        src: ../../config/tmux/
        dest: /home/{{ pwnpad_vm_user }}
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

    - name: Clone tmux plugins
      ansible.builtin.git:
        repo: "https://github.com/tmux-plugins/tpm"
        dest: "/home/{{ pwnpad_vm_user }}/.tmux/plugins/tpm"
        depth: 1
        force: yes

    - name: Install tmux plugins
      ansible.builtin.command: /home/{{ pwnpad_vm_user }}/.tmux/plugins/tpm/scripts/install_plugins.sh
      args:
        chdir: "/home/{{ pwnpad_vm_user }}/.tmux/plugins/tpm"
      changed_when: true

- name: Setup Neovim
  hosts: lima-pwnpad
  tags: setup_neovim
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Clone neovim config
      ansible.builtin.git:
        repo: "https://github.com/PlatyPew/nvim.git"
        dest: "/home/{{ pwnpad_vm_user }}/.config/nvim"
        depth: 1
        force: yes

    - name: Install neovim plugins
      ansible.builtin.command: nvim --headless -c "lua require('lazy').restore({wait = true})" -c "qa"
      changed_when: true

    - name: Initialise neovim plugins
      ansible.builtin.command: nvim --headless -c "norm i" -c 'execute "sleep 5" | qall' tmp
      changed_when: true

- name: Setup zsh
  hosts: lima-pwnpad
  tags: setup_zsh
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Copy zsh configuration
      become: true
      ansible.builtin.copy:
        src: ../../config/zsh/
        dest: /home/{{ pwnpad_vm_user }}
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

    - name: Create .hushlogin file
      become: true
      ansible.builtin.file:
        path: "/home/{{ pwnpad_vm_user }}/.hushlogin"
        mode: "0644"
        state: touch
        owner: "{{ pwnpad_vm_user }}"
        group: users

    - name: Clone zgenom repository
      ansible.builtin.git:
        repo: "https://github.com/jandamm/zgenom.git"
        dest: "/home/{{ pwnpad_vm_user }}/.zgenom"
        depth: 1
        force: yes

    - name: Install zsh plugins
      ansible.builtin.shell: |
        zsh -c "source /home/{{ pwnpad_vm_user }}/.zshrc && /home/{{ pwnpad_vm_user }}/.zgenom/sources/romkatv/powerlevel10k/___/gitstatus/install"

    - name: Setup highlighting for zsh and bat
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0755"
      loop:
        - "/home/{{ pwnpad_vm_user }}/.config/bat/themes"
        - "/home/{{ pwnpad_vm_user }}/.config/f-sy-h"

    - name: Download Catppuccin Mocha theme for bat
      become: true
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/catppuccin/bat/main/themes/Catppuccin%20Mocha.tmTheme
        dest: "/home/{{ pwnpad_vm_user }}/.config/bat/themes/Catppuccin-mocha.tmTheme"
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

    - name: Build bat cache
      ansible.builtin.command: bat cache --build

    - name: Download zsh theme
      become: true
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/catppuccin/zsh-fsh/main/themes/catppuccin-mocha.ini
        dest: "/home/{{ pwnpad_vm_user }}/.config/f-sy-h/catppuccin-mocha.ini"
        owner: "{{ pwnpad_vm_user }}"
        group: users
        mode: "0644"

    - name: Install zsh theme
      ansible.builtin.shell: |
        zsh -c "source /home/{{ pwnpad_vm_user }}/.zshrc && fast-theme CONFIG:catppuccin-mocha"

- name: Create link between host and VM
  hosts: lima-pwnpad
  tags: setup_link
  become: false
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Create link
      ansible.builtin.file:
        src: "/mnt/shared"
        dest: "/home/{{ pwnpad_vm_user }}/shared"
        state: link

- name: Perform cleanup
  hosts: lima-pwnpad
  tags: cleanup
  gather_facts: false
  become: true
  vars:
    pwnpad_vm_user: "pwnpad"
  tasks:
    - name: Clean pacman cache
      ansible.builtin.command: pacman -Scc --noconfirm

    - name: Remove specific files and directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/home/{{ pwnpad_vm_user }}/.zshrc.pre-oh-my-zsh"
        - "/home/{{ pwnpad_vm_user }}/.zsh_history"
        - "/home/{{ pwnpad_vm_user }}/.bash_profile"
        - "/home/{{ pwnpad_vm_user }}/.wget-hsts"
        - "/home/{{ pwnpad_vm_user }}/.bash_logout"
        - "/home/{{ pwnpad_vm_user }}/.bundle"
        - "/var/cache"
        - "/home/{{ pwnpad_vm_user }}/.cache/pip"
        - "/home/{{ pwnpad_vm_user }}/.cache/yay"
        - "/home/{{ pwnpad_vm_user }}/.npm"
        - "/var/log"
        - "/home/{{ pwnpad_vm_user }}/.zcompdump-buildkitsandbox*"

    - name: Update mlocate database
      ansible.builtin.command: updatedb
      changed_when: true
